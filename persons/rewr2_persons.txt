Female(X) => Adult(X)
Female(X), Minor(X)
Female(X), Minor(X)
Male(X) => Person(X)
Woman(X) => Person(X)
hasParent(Y, X) => Person(X)
MarriedTo(Y, X) => Adult(X)
Priest(X) => Male(X)
Woman(X) => Adult(X)
MarriedTo(X, Y) => hasParent(Y, X)
Man(X) => Male(X)
hasParent(Y, X) => Adult(X)
Minor(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Female(X) => Person(X)
Priest(X) => hasParent(X, Y)
MarriedTo(X, Y) => Adult(X)
hasParent(X, Y) => Person(X)
hasParent(Y, X) => MarriedTo(Y, X)
Minor(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
SinglePerson(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
SinglePerson(X), hasParent(Y, X)
MarriedTo(X, Y) => Person(X)
MarriedTo(X, Y) => MarriedTo(Y, X)
Priest(X) => Adult(X)
hasParent(Y, X) => MarriedTo(X, Y)
Minor(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
SinglePerson(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
SinglePerson(X), hasParent(Y, X)
hasParent(X, Y) => Adult(X)
Minor(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
MarriedTo(Y, X) => Person(X)
Adult(X) => Person(X)
Male(X) => Man(X)
Male(X), Minor(X)
Male(X), Minor(X)
Woman(X) => Female(X)
Female(X) => Woman(X)
Female(X), Minor(X)
Female(X), Minor(X)
Priest(X) => Person(X)
Person(X) => Adult(X)
Minor(X)
Minor(X)
Priest(X) => Man(X)
Man(X) => Person(X)
MarriedTo(Y, X) => MarriedTo(X, Y)
MarriedTo(Y, X) => hasParent(Y, X)
Male(X) => Adult(X)
Male(X), Minor(X)
Male(X), Minor(X)
Man(X) => Adult(X)
Adult(X) => Female(X)
Adult(X), Male(X)
Man(X)
Priest(X)
Male(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Adult(X), Male(X)
Man(X)
Priest(X)
Male(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
MarriedTo(X, Y) => Man(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Adult(X) => MarriedTo(X, Y)
Priest(X)
Adult(X), SinglePerson(X)
Man(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Priest(X)
Adult(X), SinglePerson(X)
Man(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Woman(X) => MarriedTo(Y, X)
SinglePerson(X), Woman(X)
SinglePerson(X), Woman(X)
Male(X) => hasParent(X, Y)
Woman(X) => hasParent(Y, X)
MarriedTo(Y, X) => Female(X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
hasParent(Y, X) => Male(X)
Female(X), hasParent(Y, X)
Woman(X), hasParent(Y, X)
Female(X), hasParent(Y, X)
Woman(X), hasParent(Y, X)
Adult(X) => Man(X)
Adult(X), Female(X)
Woman(X)
Female(X), MarriedTo(Y, X)
Female(X), MarriedTo(X, Y)
Adult(X), Female(X)
Woman(X)
Female(X), MarriedTo(Y, X)
Female(X), MarriedTo(X, Y)
Person(X) => Male(X)
Female(X)
Woman(X)
Female(X)
Woman(X)
Man(X) => MarriedTo(X, Y)
Priest(X)
Man(X), SinglePerson(X)
Priest(X)
Man(X), SinglePerson(X)
Male(X) => MarriedTo(X, Y)
Male(X), Minor(X)
Priest(X)
Male(X), SinglePerson(X)
Man(X), SinglePerson(X)
Male(X), Minor(X)
Priest(X)
Male(X), SinglePerson(X)
Man(X), SinglePerson(X)
MarriedTo(X, Y) => Female(X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
hasParent(X, Y) => Female(X)
Male(X), hasParent(X, Y)
Man(X), hasParent(X, Y)
Priest(X), hasParent(X, Y)
Male(X), hasParent(X, Y)
Man(X), hasParent(X, Y)
Priest(X), hasParent(X, Y)
Person(X) => Female(X)
Male(X)
Man(X)
Priest(X)
Male(X)
Man(X)
Priest(X)
Male(X) => MarriedTo(Y, X)
Male(X), Minor(X)
Priest(X)
Male(X), SinglePerson(X)
Man(X), SinglePerson(X)
Male(X), Minor(X)
Priest(X)
Male(X), SinglePerson(X)
Man(X), SinglePerson(X)
hasParent(X, Y) => Man(X)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
Adult(X) => MarriedTo(Y, X)
Priest(X)
Adult(X), SinglePerson(X)
Man(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Priest(X)
Adult(X), SinglePerson(X)
Man(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Adult(X) => hasParent(X, Y)
hasParent(Y, X) => Man(X)
Female(X), hasParent(Y, X)
Woman(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Female(X), hasParent(Y, X)
Woman(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Man(X) => Priest(X)
Man(X), MarriedTo(X, Y)
Man(X), MarriedTo(Y, X)
Man(X), MarriedTo(X, Y)
Man(X), MarriedTo(Y, X)
Male(X) => hasParent(Y, X)
MarriedTo(Y, X) => Woman(X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
hasParent(X, Y) => Male(X)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
hasParent(Y, X) => Female(X)
Male(X), hasParent(Y, X)
Man(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
Male(X), hasParent(Y, X)
Man(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
Adult(X) => hasParent(Y, X)
Person(X) => hasParent(Y, X)
MarriedTo(Y, X) => Man(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
hasParent(X, Y) => Woman(X)
Male(X), hasParent(X, Y)
Man(X), hasParent(X, Y)
Priest(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
Male(X), hasParent(X, Y)
Man(X), hasParent(X, Y)
Priest(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
Man(X) => MarriedTo(Y, X)
Priest(X)
Man(X), SinglePerson(X)
Priest(X)
Man(X), SinglePerson(X)
hasParent(Y, X) => Woman(X)
Male(X), hasParent(Y, X)
Man(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Male(X), hasParent(Y, X)
Man(X), hasParent(Y, X)
Priest(X), hasParent(Y, X)
Minor(X), hasParent(Y, X)
Man(X) => hasParent(X, Y)
Woman(X) => MarriedTo(X, Y)
SinglePerson(X), Woman(X)
SinglePerson(X), Woman(X)
Female(X) => hasParent(X, Y)
Female(X) => MarriedTo(X, Y)
Female(X), Minor(X)
Female(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Female(X), Minor(X)
Female(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Woman(X) => hasParent(X, Y)
MarriedTo(Y, X) => Male(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
MarriedTo(X, Y) => Woman(X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Man(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(Y, X)
Female(X) => MarriedTo(Y, X)
Female(X), Minor(X)
Female(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Female(X), Minor(X)
Female(X), SinglePerson(X)
SinglePerson(X), Woman(X)
Male(X) => Priest(X)
Male(X), Minor(X)
Male(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(X, Y)
Man(X), MarriedTo(Y, X)
Male(X), Minor(X)
Male(X), MarriedTo(X, Y)
Male(X), MarriedTo(Y, X)
Man(X), MarriedTo(X, Y)
Man(X), MarriedTo(Y, X)
Man(X) => hasParent(Y, X)
Person(X) => Woman(X)
Male(X)
Man(X)
Priest(X)
Minor(X)
Male(X)
Man(X)
Priest(X)
Minor(X)
Person(X) => MarriedTo(Y, X)
Minor(X)
Priest(X)
SinglePerson(X)
Minor(X)
Priest(X)
SinglePerson(X)
Person(X) => Man(X)
Female(X)
Woman(X)
Minor(X)
Female(X)
Woman(X)
Minor(X)
MarriedTo(X, Y) => Male(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Female(X), MarriedTo(X, Y)
MarriedTo(X, Y), Woman(X)
Female(X), MarriedTo(Y, X)
MarriedTo(Y, X), Woman(X)
Adult(X) => Woman(X)
Adult(X), Male(X)
Man(X)
Priest(X)
Male(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Adult(X), Male(X)
Man(X)
Priest(X)
Male(X), MarriedTo(Y, X)
Male(X), MarriedTo(X, Y)
Female(X) => hasParent(Y, X)
Person(X) => hasParent(X, Y)
hasParent(X, Y) => Priest(X)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
MarriedTo(X, Y), hasParent(X, Y)
MarriedTo(Y, X), hasParent(X, Y)
Female(X), hasParent(X, Y)
Woman(X), hasParent(X, Y)
Minor(X), hasParent(X, Y)
MarriedTo(X, Y), hasParent(X, Y)
MarriedTo(Y, X), hasParent(X, Y)
Person(X) => MarriedTo(X, Y)
Minor(X)
Priest(X)
SinglePerson(X)
Minor(X)
Priest(X)
SinglePerson(X)
Adult(X) => Male(X)
Adult(X), Female(X)
Woman(X)
Female(X), MarriedTo(Y, X)
Female(X), MarriedTo(X, Y)
Adult(X), Female(X)
Woman(X)
Female(X), MarriedTo(Y, X)
Female(X), MarriedTo(X, Y)
Person(X) => Priest(X)
Female(X)
Woman(X)
Minor(X)
MarriedTo(Y, X), MarriedTo(Y, X)
MarriedTo(X, Y), MarriedTo(X, Y)
Female(X)
Woman(X)
Minor(X)
MarriedTo(Y, X), MarriedTo(Y, X)
MarriedTo(X, Y), MarriedTo(X, Y)
Adult(X) => Priest(X)
Adult(X), Female(X)
Woman(X)
MarriedTo(Y, X), MarriedTo(Y, X)
MarriedTo(X, Y), MarriedTo(X, Y)
Adult(X), Female(X)
Woman(X)
MarriedTo(Y, X), MarriedTo(Y, X)
MarriedTo(X, Y), MarriedTo(X, Y)
